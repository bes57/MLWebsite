panel.grid.major.y = element_line(color = "gray80")
)
Kalshi25_arb |>
filter(!is.na(Ticker), !is.na(Realized_Profit_Clean)) |>
group_by(Ticker) |>
summarize(
Trades = n(),
Total_Profit = sum(Realized_Profit_Clean),
Avg_Profit_Per_Trade = mean(Realized_Profit_Clean)
) |>
arrange(desc(Trades)) |>
slice_head(n = 10) |>
kable(digits = 2, format = "markdown", caption = "Trade Summary by Quantity")
Kalshi25_arb |>
filter(!is.na(Ticker), !is.na(Realized_Profit_Clean)) |>
group_by(Ticker) |>
summarize(
Trades = n(),
Total_Profit = sum(Realized_Profit_Clean),
Avg_Profit_Per_Trade = mean(Realized_Profit_Clean)
) |>
arrange(desc(Total_Profit)) |>
slice_head(n = 10) |>
kable(digits = 2, format = "markdown", caption = "Trade Summary by Net Profit")
Kalshi25 |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
)
Kalshi25$DayOfWeek <- factor(Kalshi25$DayOfWeek, ordered = FALSE)
Kalshi25 <- Kalshi25 |>
mutate(
TimeOfDay = case_when(
Hour %in% c(8:12) ~ "morning",
Hour %in% c(13:17) ~ "afternoon",
Hour %in% c(18:20) ~ "evening",
Hour %in% c(21, 22, 23, 0) ~ "night",
Hour %in% c(1:7) ~ "toolate",
),
TimeOfDay = fct_relevel(TimeOfDay, "morning", "afternoon", "evening", "night", "toolate")
)
model_profit_time <- lm(Average_Price ~ 0 + TimeOfDay, data = Kalshi25)
model_profit_day <- lm(Average_Price ~ 0 + DayOfWeek, data = Kalshi25)
model_profit_timeday <- lm(Average_Price ~ 0 + TimeOfDay * DayOfWeek, data = Kalshi25)
summary(model_profit_time)
summary(model_profit_day)
summary(model_profit_timeday)
#| tbl-cap: "Cross references to tables use labels for the code chunk starting with tbl-."
#| fig-cap: "Remember figure labels begin with fig-"
ggplot()
#| include: false
# automatically create a bib database for loaded R packages & rUM
knitr::write_bib(
c(
.packages(),
"rUM"
),
"packages.bib"
)
Kalshi25 |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
) |>
:kable(digits = 2, caption = "Average Profit for Tickers with a Single Trade")
Kalshi25 |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
) |>
kable(digits = 2, caption = "Average Profit for Tickers with a Single Trade")
#| label: library
#install.packages("kableExtra")
suppressPackageStartupMessages(library(tidymodels))
tidymodels_prefer()
suppressPackageStartupMessages(library(tidyverse))
library(kableExtra)
library(glue)
library(rUM)
library(rio)
library(table1)
library(knitr)
library(gt)
library(conflicted)
Kalshi25 |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
) |>
kable(digits = 2, caption = "Average Profit for Tickers with a Single Trade")
#| label: library
#install.packages("kableExtra")
suppressPackageStartupMessages(library(tidymodels))
tidymodels_prefer()
suppressPackageStartupMessages(library(tidyverse))
library(kableExtra)
library(glue)
library(rUM)
library(rio)
library(table1)
library(knitr)
library(gt)
library(conflicted)
Kalshi25 <- read.csv("~/Downloads/MayKalshi.csv", stringsAsFactors = FALSE)
scales::dollar_format()
Kalshi25$Created_Clean <- gsub(" at ", " ", Kalshi25$Created)
Kalshi25$Created_Clean <- gsub(" EST", "", Kalshi25$Created_Clean)
Kalshi25$Created_Parsed <- parse_date_time(Kalshi25$Created_Clean, orders = "b d, Y I:Mp")
Kalshi25$Month <- format(Kalshi25$Created_Parsed, "%B")
Kalshi25$DayOfWeek <- weekdays(Kalshi25$Created_Parsed)
Kalshi25$Hour <- hour(Kalshi25$Created_Parsed)
month_levels <- month.name  # "January" to "December"
day_levels <- c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
Kalshi25 <- Kalshi25 |> select(-Created)
glimpse(Kalshi25)
Kalshi25$Realized_Profit_Clean <- as.numeric(gsub("[\\$,]", "", Kalshi25$Realized_Profit))
total_realized_profit <- sum(Kalshi25$Realized_Profit_Clean, na.rm = TRUE)
data.frame(Total_Realized_Profit = dollar(total_realized_profit)) |>
kable(caption = "", align = "c") |>
kable_styling(full_width = FALSE)
Kalshi25$Fees_Clean <- as.numeric(gsub("[\\$,]", "", Kalshi25$Fees))
total_fees <- sum(Kalshi25$Fees_Clean, na.rm = TRUE)
data.frame(Total_Fees = dollar(total_fees)) %>%
kable(caption = "", align = "c") %>%
kable_styling(full_width = FALSE)
Kalshi25$Month <- factor(Kalshi25$Month,
levels = month.name, ordered = TRUE)
month_counts <- table(Kalshi25$Month)
month_counts |>
as.data.frame() |>
setNames(c("Month", "Count")) |>
gt() |>
tab_header(
title = "Trades by Month"
)
Kalshi25$DayOfWeek <- factor(Kalshi25$DayOfWeek,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = TRUE)
day_counts <- table(Kalshi25$DayOfWeek)
day_counts |>
as.data.frame() |>
setNames(c("Day", "Count")) |>
gt() |>
tab_header(
title = "Trades by Day"
)
ggplot(Kalshi25, aes(x = Direction)) +
geom_bar(fill = "darkblue", alpha = 0.7, width = 0.6) +
geom_text(
stat = "count",
aes(label = after_stat(count)),
vjust = -0.5,
size = 5,
family = "Courier",
color = "black"
) +
labs(
title = "Number of Trades by Direction",
x = "Direction",
y = "Count"
) +
expand_limits(y = max(table(Kalshi25$Direction)) * 1.1) +
theme_minimal(base_size = 15, base_family = "Courier") +
theme(
plot.background = element_rect(fill = "#FFFFFF", color = NA),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black"),
panel.grid.major.x = element_blank()
)
ggplot(Kalshi25, aes(x = Created_Parsed, y = Realized_Profit_Clean)) +
geom_hline(yintercept = 0, color = "gray30", linetype = "dashed", linewidth = 0.7) +
geom_point(alpha = 0.6, color = "darkblue", size = 2) +
scale_y_continuous(labels = dollar_format()) +
labs(
title = "Realized Profit by Invidual Trades Over Time",
x = "Date",
y = "Realized Profit"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = "gray80"),
panel.grid.major.y = element_line(color = "gray80")
)
cleaned_df <- Kalshi25[!is.na(Kalshi25$Realized_Profit_Clean), ]
top_wins <- cleaned_df %>%
arrange(desc(Realized_Profit_Clean)) %>%
slice_head(n = 5)
top_losses <- cleaned_df %>%
arrange(Realized_Profit_Clean) %>%
slice_head(n = 5)
biggest_outliers <- bind_rows(top_wins, top_losses)
# Format for output
biggest_outliers %>%
select(Date = Created_Parsed, Profit = Realized_Profit_Clean, Ticker) %>%
mutate(
Date = format(Date, "%b %d, %Y %I:%M %p"),
Profit = dollar(Profit)
) %>%
kable(caption = "Top 5 Gains and Losses by Trade", align = "c") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Baseball Arbitrages
baseball_df <- Kalshi25 %>%
filter(str_starts(Ticker, "KXMLBGAME")) %>%
filter(!is.na(Realized_Profit_Clean)) %>%
mutate(
GameID = str_replace(Ticker, "-[^-]+$", ""),
Contracts = as.numeric(Contracts)  # Ensure numeric within pipeline
)
baseball_collapsed <- baseball_df %>%
group_by(GameID) %>%
summarise(
Ticker = first(GameID),
Realized_Profit_Clean = sum(Realized_Profit_Clean, na.rm = TRUE),
Contracts = sum(Contracts, na.rm = TRUE),
Created_Parsed = min(Created_Parsed, na.rm = TRUE),
.groups = "drop"
)
non_baseball_df <- Kalshi25 %>%
filter(!str_starts(Ticker, "KXMLBGAME"))
Kalshi25_arb <- bind_rows(
non_baseball_df,
baseball_collapsed
) %>%
arrange(Created_Parsed)
# WNBA Arbitrages
womensbball <- Kalshi25_arb %>%
filter(str_starts(Ticker, "KXWNBAGAME")) %>%
filter(!is.na(Realized_Profit_Clean)) %>%
mutate(
GameID = str_replace(Ticker, "-[^-]+$", ""),
Contracts = as.numeric(Contracts)
)
womensbball_collapsed <- womensbball %>%
group_by(GameID) %>%
summarise(
Ticker = first(GameID),
Realized_Profit_Clean = sum(Realized_Profit_Clean, na.rm = TRUE),
Contracts = sum(Contracts, na.rm = TRUE),
Created_Parsed = min(Created_Parsed, na.rm = TRUE),
.groups = "drop"
)
non_womensbball <- Kalshi25_arb %>%
filter(!str_starts(Ticker, "KXWNBAGAME"))
Kalshi25_arb <- bind_rows(
non_womensbball,
womensbball_collapsed
) %>%
arrange(Created_Parsed)
top_wins_no_arb <- Kalshi25_arb |>
arrange(desc(Realized_Profit_Clean)) |>
slice_head(n = 5)
top_losses_no_arb <- Kalshi25_arb |>
arrange(Realized_Profit_Clean) |>
slice_head(n = 5)
biggest_outliers_no_arb <- bind_rows(top_wins_no_arb, top_losses_no_arb)
biggest_outliers_no_arb |>
select(Date = Created_Parsed, Profit = Realized_Profit_Clean, Ticker) %>%
mutate(
Date = format(Date, "%b %d, %Y %I:%M %p"),
Profit = dollar(Profit)
) %>%
kable(caption = "Top 5 Gains and Losses by Trade With Arbitrages Combined", align = "c") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
knitr::include_graphics("~/Downloads/CountryKalshi.png")
filtered_df <- Kalshi25_arb %>%
filter(Created_Parsed >= as.POSIXct("2025-02-01"))
ggplot(filtered_df, aes(x = Created_Parsed, y = Realized_Profit_Clean)) +
geom_hline(yintercept = 0, color = "gray30", linetype = "dashed", linewidth = 0.7) +
geom_point(alpha = 0.6, color = "darkblue", size = 2) +
scale_y_continuous(labels = dollar_format()) +
coord_cartesian(ylim = c(-10, 10)) +
labs(
title = "Zoomed-In Realized Profit by Invidual Trades Over Time Since February",
x = "Date",
y = "Realized Profit"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = "gray80"),
panel.grid.major.y = element_line(color = "gray80")
)
Kalshi25_arb |>
filter(!is.na(Ticker), !is.na(Realized_Profit_Clean)) |>
group_by(Ticker) |>
summarize(
Trades = n(),
Total_Profit = sum(Realized_Profit_Clean),
Avg_Profit_Per_Trade = mean(Realized_Profit_Clean)
) |>
arrange(desc(Trades)) |>
slice_head(n = 10) |>
kable(digits = 2, format = "markdown", caption = "Trade Summary by Quantity")
Kalshi25_arb |>
filter(!is.na(Ticker), !is.na(Realized_Profit_Clean)) |>
group_by(Ticker) |>
summarize(
Trades = n(),
Total_Profit = sum(Realized_Profit_Clean),
Avg_Profit_Per_Trade = mean(Realized_Profit_Clean)
) |>
arrange(desc(Total_Profit)) |>
slice_head(n = 10) |>
kable(digits = 2, format = "markdown", caption = "Trade Summary by Net Profit")
Kalshi25_arb |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
) |>
kable(digits = 2, caption = "Average Profit for Tickers with a Single Trade")
Kalshi25_arb |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1) |>
summarize(
Avg_Profit_Single_Trade = mean(Realized_Profit_Clean)
) |>
kable(digits = 2, caption = "Average Profit for Gambles", align = "c") |>
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
Kalshi25_arb |>
filter(!is.na(Ticker)) |>
group_by(Ticker) |>
mutate(Trades = n()) |>
ungroup() |>
filter(Trades == 1)
Kalshi25_arb
Kalshi25_arb$DayOfWeek <- factor(Kalshi25$DayOfWeek, ordered = FALSE)
Kalshi25_arb$DayOfWeek <- factor(Kalshi25$DayOfWeek, ordered = FALSE)
Kalshi25_arb$DayOfWeek <- factor(Kalshi25$DayOfWeek, ordered = FALSE)
Kalshi25
Kalshi25_arb
Kalshi25_arb$DayOfWeek <- factor(Kalshi25_arb$DayOfWeek, ordered = FALSE)
Kalshi25_arb <- Kalshi25_arb |>
mutate(
TimeOfDay = case_when(
Hour %in% c(8:12) ~ "morning",
Hour %in% c(13:17) ~ "afternoon",
Hour %in% c(18:20) ~ "evening",
Hour %in% c(21, 22, 23, 0) ~ "night",
Hour %in% c(1:7) ~ "toolate",
),
TimeOfDay = fct_relevel(TimeOfDay, "morning", "afternoon", "evening", "night", "toolate")
)
model_profit_time <- lm(Average_Price ~ 0 + TimeOfDay, data = Kalshi25_arb)
model_profit_day <- lm(Average_Price ~ 0 + DayOfWeek, data = Kalshi25_arb)
model_profit_timeday <- lm(Average_Price ~ 0 + TimeOfDay * DayOfWeek, data = Kalshi25_arb)
summary(model_profit_time)
summary(model_profit_day)
summary(model_profit_timeday)
Kalshi25_arb$DayOfWeek <- factor(Kalshi25_arb$DayOfWeek, ordered = FALSE)
Kalshi25_arb <- Kalshi25_arb |>
mutate(
TimeOfDay = case_when(
Hour %in% c(8:12) ~ "morning",
Hour %in% c(13:17) ~ "afternoon",
Hour %in% c(18:20) ~ "evening",
Hour %in% c(21, 22, 23, 0) ~ "night",
Hour %in% c(1:7) ~ "toolate",
),
TimeOfDay = fct_relevel(TimeOfDay, "morning", "afternoon", "evening", "night", "toolate")
)
model_profit_time <- lm(Average_Price ~ 0 + TimeOfDay, data = Kalshi25_arb)
model_profit_day <- lm(Average_Price ~ 0 + DayOfWeek, data = Kalshi25_arb)
model_profit_timeday <- lm(Average_Price ~ 0 + TimeOfDay * DayOfWeek, data = Kalshi25_arb)
summary(model_profit_time)
summary(model_profit_day)
summary(model_profit_timeday)
#| label: library
#install.packages("kableExtra")
suppressPackageStartupMessages(library(tidymodels))
tidymodels_prefer()
suppressPackageStartupMessages(library(tidyverse))
library(kableExtra)
library(glue)
library(rUM)
library(rio)
library(table1)
library(knitr)
library(gt)
library(broom)
library(conflicted)
Kalshi25_arb$DayOfWeek <- factor(Kalshi25_arb$DayOfWeek, ordered = FALSE)
Kalshi25_arb <- Kalshi25_arb |>
mutate(
TimeOfDay = case_when(
Hour %in% c(8:12) ~ "morning",
Hour %in% c(13:17) ~ "afternoon",
Hour %in% c(18:20) ~ "evening",
Hour %in% c(21, 22, 23, 0) ~ "night",
Hour %in% c(1:7) ~ "toolate",
),
TimeOfDay = fct_relevel(TimeOfDay, "morning", "afternoon", "evening", "night", "toolate")
)
model_profit_time <- lm(Average_Price ~ 0 + TimeOfDay, data = Kalshi25_arb)
model_profit_day <- lm(Average_Price ~ 0 + DayOfWeek, data = Kalshi25_arb)
model_profit_timeday <- lm(Average_Price ~ 0 + TimeOfDay * DayOfWeek, data = Kalshi25_arb)
tidy_time <- broom::tidy(model_profit_time)
tidy_day <- broom::tidy(model_profit_day)
tidy_timeday <- broom::tidy(model_profit_timeday)
tidy_time |>
mutate(term = str_replace(term, "TimeOfDay", "")) |>
kable(digits = 2, caption = "Effect of Time of Day on Average Price", align = "c") |>
kable_styling(full_width = FALSE)
tidy_day |>
mutate(term = str_replace(term, "DayOfWeek", "")) |>
kable(digits = 2, caption = "Effect of Day of Week on Average Price", align = "c") |>
kable_styling(full_width = FALSE)
tidy_timeday |>
mutate(term = str_replace_all(term, "TimeOfDay", ""),
term = str_replace_all(term, "DayOfWeek", "")) |>
kable(digits = 2, caption = "Interaction: Time of Day × Day of Week", align = "c") |>
kable_styling(full_width = FALSE)
Kalshi25_arb$DayOfWeek <- factor(Kalshi25_arb$DayOfWeek, ordered = FALSE)
Kalshi25_arb <- Kalshi25_arb |>
mutate(
TimeOfDay = case_when(
Hour %in% c(8:12) ~ "morning",
Hour %in% c(13:17) ~ "afternoon",
Hour %in% c(18:20) ~ "evening",
Hour %in% c(21, 22, 23, 0) ~ "night",
Hour %in% c(1:7) ~ "toolate",
),
TimeOfDay = fct_relevel(TimeOfDay, "morning", "afternoon", "evening", "night", "toolate")
)
model_profit_time <- lm(Average_Price ~ 0 + TimeOfDay, data = Kalshi25_arb)
model_profit_day <- lm(Average_Price ~ 0 + DayOfWeek, data = Kalshi25_arb)
model_profit_timeday <- lm(Average_Price ~ 0 + TimeOfDay * DayOfWeek, data = Kalshi25_arb)
tidy_time <- broom::tidy(model_profit_time)
tidy_day <- broom::tidy(model_profit_day)
tidy_timeday <- broom::tidy(model_profit_timeday)
tidy_time |>
mutate(term = str_replace(term, "TimeOfDay", "")) |>
kable(digits = 2, caption = "Effect of Time of Day on Average Price", align = "c") |>
kable_styling(full_width = FALSE)
tidy_day |>
mutate(term = str_replace(term, "DayOfWeek", "")) |>
kable(digits = 2, caption = "Effect of Day of Week on Average Price", align = "c") |>
kable_styling(full_width = FALSE)
tidy_timeday |>
separate(term, into = c("TimeOfDay", "DayOfWeek"), sep = ":", remove = FALSE) |>
mutate(
TimeOfDay = str_replace(TimeOfDay, "TimeOfDay", ""),
DayOfWeek = str_replace(DayOfWeek, "DayOfWeek", "")
) |>
select(TimeOfDay, DayOfWeek, estimate, std.error, p.value) |>
arrange(desc(estimate)) |>
kable(
digits = 2,
caption = "Most Profitable Time × Day Combinations (Average Price)",
align = "c"
) |>
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
tidy_timeday |>
# Filter to interaction terms only
filter(str_detect(term, "TimeOfDay") & str_detect(term, "DayOfWeek")) |>
mutate(
TimeOfDay = str_extract(term, "TimeOfDay\\w+"),
DayOfWeek = str_extract(term, "DayOfWeek\\w+"),
TimeOfDay = str_remove(TimeOfDay, "TimeOfDay"),
DayOfWeek = str_remove(DayOfWeek, "DayOfWeek")
) |>
select(TimeOfDay, DayOfWeek, estimate, std.error, p.value) |>
arrange(desc(estimate)) |>
kable(
digits = 2,
caption = "Most Profitable Time × Day Combinations (Average Price)",
align = "c"
) |>
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
knitr::include_graphics("~/img/CountryKalshi.png")
knitr::include_graphics("~/img/CountryKalshi.png")
knitr::include_graphics("~/img/CountryKalshi.png")
knitr::include_graphics("~Downloads/Benny_Website/img/CountryKalshi.png")
knitr::include_graphics("~Downloads/Benny_Website/img/CountryKalshi.png")
knitr::include_graphics("~Downloads/Benny_Website/img/CountryKalshi.png")
knitr::include_graphics("~Downloads/Benny_Website/img/CountryKalshi.png")
knitr::include_graphics("img/CountryKalshi.png")```
knitr::include_graphics("img/CountryKalshi.png")
getwd()
file.exists("img/CountryKalshi.png")
knitr::include_graphics(here::here("img", "CountryKalshi.png"))
